"use strict";(self.webpackChunkresilient_react_docs=self.webpackChunkresilient_react_docs||[]).push([[206],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),c=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=c(n),m=a,f=p["".concat(l,".").concat(m)]||p[m]||d[m]||i;return n?r.createElement(f,o(o({ref:t},u),{},{components:n})):r.createElement(f,o({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=p;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var c=2;c<i;c++)o[c]=n[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},9568:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return u},default:function(){return p}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),o=["components"],s={sidebar_position:1},l="Motivation",c={unversionedId:"intro",id:"intro",title:"Motivation",description:"What is this guide?",source:"@site/docs/intro.mdx",sourceDirName:".",slug:"/intro",permalink:"/resilient-react/docs/intro",editUrl:"https://github.com/nervestaple/resilient-react/tree/main/docs/intro.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"Single Source of Truth",permalink:"/resilient-react/docs/single-source-of-truth"}},u=[{value:"What is this guide?",id:"what-is-this-guide",children:[],level:2},{value:"What are our problems?",id:"what-are-our-problems",children:[],level:2},{value:"Common Code Smells",id:"common-code-smells",children:[],level:2},{value:"How can we improve?",id:"how-can-we-improve",children:[{value:"Reactivity?",id:"reactivity",children:[],level:3},{value:"What about side effects?",id:"what-about-side-effects",children:[],level:3}],level:2}],d={toc:u};function p(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"motivation"},"Motivation"),(0,i.kt)("h2",{id:"what-is-this-guide"},"What is this guide?"),(0,i.kt)("p",null,"A set of practical guidelines for building React apps such that they're maximally reactive, predictable, and maintainable."),(0,i.kt)("h2",{id:"what-are-our-problems"},"What are our problems?"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Long, complicated components"),(0,i.kt)("li",{parentName:"ul"},"Complex webs of state that interact in unpredictable ways"),(0,i.kt)("li",{parentName:"ul"},"Difficulty in extending existing components -- it's hard to do our jobs!",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Small changes have the potential to create infinite loops"),(0,i.kt)("li",{parentName:"ul"},"Changing state fields often results in unpredictable chains of effects"),(0,i.kt)("li",{parentName:"ul"},"It's often difficult to see the 'right' way to do things, resulting in understandable 'hacks'"))),(0,i.kt)("li",{parentName:"ul"},"We're in a situation where, given any particular task, the easiest thing to do just adds to our existing set of problems!")),(0,i.kt)("h2",{id:"common-code-smells"},"Common Code Smells"),(0,i.kt)("p",null,'A "code smell" is a simple hint that strongly indicates at an issue in your code.\nI\'ll try to address ',(0,i.kt)("em",{parentName:"p"},"why")," these are code smells, and what alternatives to consider, later in this doc."),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"useEffect being used to set state",(0,i.kt)("ol",{parentName:"li"},(0,i.kt)("li",{parentName:"ol"},"this might be the most controversial (but also the most important), as code doing exactly this forms a large proportion of our Configurations code"))),(0,i.kt)("li",{parentName:"ol"},"Ignored dependencies in hooks (most often useEffect)"),(0,i.kt)("li",{parentName:"ol"},"Refs used to get around ignored dependencies"),(0,i.kt)("li",{parentName:"ol"},"Comments referencing the lifecycle of the component, like: ",(0,i.kt)("inlineCode",{parentName:"li"},"// this should just be called once on mount!"))),(0,i.kt)("h2",{id:"how-can-we-improve"},"How can we improve?"),(0,i.kt)("h3",{id:"reactivity"},"Reactivity?"),(0,i.kt)("p",null,"It's in the name! Components should ",(0,i.kt)("em",{parentName:"p"},"react")," to changes in a predictable way.\nWhen the relevant data changes, what's rendered should change! (I know this sounds obvious!)"),(0,i.kt)("p",null,"We all know the mental model: React components are essentially just functions: ",(0,i.kt)("inlineCode",{parentName:"p"},"f(props) => rendered result")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"function Sum({ a, b }) {\n  return (\n    <p>\n      Let's add! {a} + {b} = {a + b}\n    </p>\n  );\n}\n\nrender(<Sum a={1} b={2} />);\n")),(0,i.kt)("p",null,"State complicates this, but not by much.\nProps and state are still just values that can be used to render a result!"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"function Sum() {\n  const [a, setA] = useState(1);\n  const [b, setB] = useState(2);\n  return (\n    <div>\n      <p>\n        Let's add! {a} + {b} = {a + b}\n      </p>\n      <div>\n        A: <input value={a} onChange={(e) => setA(getIntFromEvent(e))} />\n      </div>\n      <div>\n        B: <input value={b} onChange={(e) => setB(getIntFromEvent(e))} />\n      </div>\n    </div>\n  );\n}\n\nfunction getIntFromEvent(e) {\n  const num = parseInt(e.target.value);\n  return Number.isInteger(num) ? num : null;\n}\n\nrender(<Sum />);\n")),(0,i.kt)("h3",{id:"what-about-side-effects"},"What about side effects?"),(0,i.kt)("p",null,"The primary purpose of ",(0,i.kt)("inlineCode",{parentName:"p"},"useEffect")," is to manage 'side effects':"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Fetching data from an API"),(0,i.kt)("li",{parentName:"ul"},"Managing asynchronous tasks (",(0,i.kt)("inlineCode",{parentName:"li"},"setTimeout"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"setInterval"),")"),(0,i.kt)("li",{parentName:"ul"},"Managing external objects with their own lifecycle (",(0,i.kt)("inlineCode",{parentName:"li"},"IntersectionObserver"),", external libraries)")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},"function Timer() {\n  const [secondsPassed, setSecondsPassed] = useState(0);\n\n  useEffect(() => {\n    function tick() {\n      setSecondsPassed((s) => s + 1);\n    }\n    const timer = setInterval(tick, 1000);\n    return () => clearInterval(timer);\n  }, []);\n\n  return <h3>Seconds passed: {secondsPassed}</h3>;\n}\n\nrender(<Timer />);\n")),(0,i.kt)("p",null,"Any use of ",(0,i.kt)("inlineCode",{parentName:"p"},"useEffect")," that doesn't fit into one of these categories should be considered a\n'code smell' and subject to a high level of scrutiny during code review!\nUnfortunately, our most common use of useEffect is one of these ",(0,i.kt)("strong",{parentName:"p"},"anti-patterns"),":\nsynchronizing state fields with other state fields."))}p.isMDXComponent=!0}}]);